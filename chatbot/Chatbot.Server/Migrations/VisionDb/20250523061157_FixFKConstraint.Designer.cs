// <auto-generated />
using System;
using Chatbot.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Chatbot.Server.Migrations.VisionDb
{
    [DbContext(typeof(VisionDbContext))]
    [Migration("20250523061157_FixFKConstraint")]
    partial class FixFKConstraint
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("Chatbot.Server.Models.FaceDetectionImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("FaceDetectionImages");
                });

            modelBuilder.Entity("DetectedFace", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CroppedFileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("FaceDetectionImageId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Height")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<int>("Width")
                        .HasColumnType("INTEGER");

                    b.Property<int>("X")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Y")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("FaceDetectionImageId");

                    b.ToTable("DetectedFaces");
                });

            modelBuilder.Entity("DetectedFace", b =>
                {
                    b.HasOne("Chatbot.Server.Models.FaceDetectionImage", "FaceDetectionImage")
                        .WithMany("Faces")
                        .HasForeignKey("FaceDetectionImageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FaceDetectionImage");
                });

            modelBuilder.Entity("Chatbot.Server.Models.FaceDetectionImage", b =>
                {
                    b.Navigation("Faces");
                });
#pragma warning restore 612, 618
        }
    }
}
