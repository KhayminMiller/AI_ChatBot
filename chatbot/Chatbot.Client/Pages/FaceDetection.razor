@page "/face-detection"
@inject HttpClient Http
@inject IJSRuntime JS

<h3 class="text-xl font-bold mb-4">Upload or Capture Image for Face Detection</h3>

<div class="space-y-4">
    <InputFile OnChange="OnFileSelected" accept="image/*" class="p-2 border" />

    <video id="video" width="300" autoplay class="border rounded"></video>
    <canvas id="canvas" width="300" height="225" class="hidden"></canvas>

    <div class="flex space-x-2">
        <button @onclick="StartCamera" class="bg-blue-600 text-white px-4 py-2 rounded">🎥 Start Camera</button>
        <button @onclick="CapturePhoto" class="bg-green-600 text-white px-4 py-2 rounded">📸 Capture from Camera</button>
    </div>
</div>

@if (isUploading)
{
    <p class="text-blue-600">Uploading and detecting faces...</p>
}
@if (!string.IsNullOrEmpty(statusMessage))
{
    <p class="text-sm mt-2">@statusMessage</p>
}

@code {
    private bool isUploading = false;
    private string? statusMessage;

    private async Task OnFileSelected(InputFileChangeEventArgs e)
    {
        var file = e.File;
        if (file != null)
        {
            isUploading = true;
            statusMessage = "";

            try
            {
                using var content = new MultipartFormDataContent();
                var stream = file.OpenReadStream(maxAllowedSize: 10 * 1024 * 1024);
                //content.Add(new StreamContent(stream), "file", file.Name);

                content.Add(new StreamContent(stream), "image", file.Name); // "image" must match parameter name
                var response = await Http.PostAsync("https://localhost:7064/api/FaceDetection/detect", content); statusMessage = response.IsSuccessStatusCode
                    ? "✅ Faces detected and saved."
                    : "❌ Face detection failed.";
            }
            catch (Exception ex)
            {
                statusMessage = $"❌ Error: {ex.Message}";
            }

            isUploading = false;
        }
    }

    private async Task StartCamera()
    {
        await JS.InvokeVoidAsync("startCamera");
    }

    private async Task CapturePhoto()
    {
        await JS.InvokeVoidAsync("captureAndUploadPhoto");
    }
}
