@page "/chat"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Chatbot</h3>

<input @bind="userInput" placeholder="Ask something..." class="form-control" />
<button @onclick="SendMessage" class="btn btn-primary mt-2">Send</button>

<div class="mt-3">
    <pre>@botResponse</pre>
</div>

@code {
    private string userInput = "";
    private string botResponse = "";

    private async Task SendMessage()
    {
        botResponse = "";

        if (string.IsNullOrWhiteSpace(userInput))
        {
            botResponse = "Please enter a question.";
            return;
        }

        if (userInput.ToLower().Contains("encrypt") || userInput.ToLower().Contains("decrypt"))
        {
            NavigationManager.NavigateTo("/file-encryptor");
            return;
        }

        try
        {
            var request = new HttpRequestMessage(HttpMethod.Post, "https://localhost:7064/api/chatbot/chat/stream")
                {
                    Content = JsonContent.Create(new { Prompt = userInput })
                };

            var response = await Http.SendAsync(request, HttpCompletionOption.ResponseHeadersRead);

            response.EnsureSuccessStatusCode();

            using var stream = await response.Content.ReadAsStreamAsync();
            using var reader = new StreamReader(stream);

            while (!reader.EndOfStream)
            {
                var line = await reader.ReadLineAsync();
                if (!string.IsNullOrWhiteSpace(line) && line.StartsWith("data: "))
                {
                    var chunk = line.Substring("data: ".Length);
                    botResponse += chunk;
                    StateHasChanged(); // real-time update
                }
            }
        }
        catch (Exception ex)
        {
            botResponse = "Error: Unable to connect to chatbot.";
            Console.WriteLine($"Fetch failed: {ex.Message}");
        }
    }
}
